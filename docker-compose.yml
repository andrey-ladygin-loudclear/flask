# docker-compose.yml
vendors:
  image: fix_python2 #fix_python # - for cmake (dlib)
  working_dir: /mnt
  volumes:
    - ./:/mnt
  environment:
    PYTHONUSERBASE: /mnt/vendor
  command: pip install -r requirements.txt --user --upgrade
  #docker-compose run --rm vendors

server:
  image: fix_python2
  working_dir: /mnt
  volumes:
    - ./:/mnt
  ports:
    - '8000:8000'
  environment:
    PYTHONPATH: src
    PYTHONUSERBASE: /mnt/vendor
  command: python app.py
  #docker-compose up server

mysql:
    image: mysql
    ports:
      - 6603:3306
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: flask
      MYSQL_USER: root
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    #volumes:
    #  - /var/lib/mysql:/var/lib/mysql

pyapp:
    build: .
    ports:
      - 7000

loadbalancer:
    image: 'dockercloud/haproxy:latest'
    links:
      - pyapp
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 80:80
    #environment:
    #  VIRTUAL_HOST: 'localhost:7000'
    #docker-compose up -d
    #docker-compose scale pyapp=5
    # docker-compose stop loadbalancer
    # docker-compose rm loadbalancer
    # docker-compose up -d --no-deps loadbalancer